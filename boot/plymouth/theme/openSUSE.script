# Mageia splashy like theme

Window.GetMaxWidth = fun (){
  i = 0;
  width = 0;
  while (Window.GetWidth(i)){
    width = Math.Max(width, Window.GetWidth(i));
    i++;
    }
  return width;
};

Window.GetMaxHeight = fun (){
  i = 0;
  height = 0;
  while (Window.GetHeight(i)){
    height = Math.Max(height, Window.GetHeight(i));
    i++;
    }
  return height;
};

anim.imagecount = 32;
anim.target_width =  0.5* 0.46 * Window.GetWidth();
anim.target_height =  0.5* 0.11 * Window.GetWidth();

fun RotatedImage (index){
	index = Math.Int(index);
	if (!RotatedImageCache[index])
		RotatedImageCache[index] = anim.original_image.Rotate((Math.Pi*2*index)/anim.imagecount).Scale(anim.target_width, anim.target_height);

	return RotatedImageCache[index];
	}


if (Plymouth.GetMode() == "suspend" || Plymouth.GetMode() == "resume") {
  background.original_image = ImageNew("suspend.png");
  Window.SetBackgroundTopColor(0.102, 0.102, 0.102);
  Window.SetBackgroundBottomColor(0.102, 0.102, 0.102);
}
else {
  if (Plymouth.GetMode() == "boot") {
  logo_en.image = ImageNew("boot-en.png");
  logo_fr.image = ImageNew("boot-fr.png");
  logo_it.image = ImageNew("boot-it.png");
  logo_de.image = ImageNew("boot-de.png");
  } else {
    logo_en.image = ImageNew("shutdown-en.png");
    logo_fr.image = ImageNew("shutdown-fr.png");
    logo_it.image = ImageNew("shutdown-it.png");
    logo_de.image = ImageNew("shutdown-de.png");
  }
  background.original_image = ImageNew("background.png");
  geeko.original_image = ImageNew("logo.png");
  Window.SetBackgroundTopColor(0.102, 0.102, 0.102);
  Window.SetBackgroundBottomColor(0.102, 0.102, 0.102);

  anim.image= ImageNew("animation.png");
  anim.original_image= anim.image.Scale(anim.target_width, anim.target_width);

  anim.sprite = SpriteNew();
  anim.sprite.SetImage(RotatedImage (0));
  anim.sprite.SetX((Window.GetX() + Window.GetWidth() - RotatedImage(0).GetWidth()) / 2.5);
  anim.sprite.SetY((Window.GetY() + Window.GetHeight() - RotatedImage(0).GetHeight()) / 2 + 100);
  anim.angle = 0;
  anim.index = 0;
}

# -- English --
logo_en.sprite = SpriteNew();
logo_en.sprite.SetImage(logo_en.image);
logo_en.opacity_angle = 0;
logo_en.sprite.SetX((Window.GetX() + Window.GetMaxWidth()  - logo_en.image.GetWidth())  / 2.5);
logo_en.sprite.SetY((Window.GetY() + Window.GetMaxHeight()  - logo_en.image.GetHeight())  / 2);
logo_en.sprite.SetOpacity (0);
# -- French --
logo_fr.sprite = SpriteNew();
logo_fr.sprite.SetImage(logo_fr.image);
logo_fr.opacity_angle = 0;
logo_fr.sprite.SetX((Window.GetX() + Window.GetMaxWidth()  - logo_fr.image.GetWidth())  / 2.5);
logo_fr.sprite.SetY((Window.GetY() + Window.GetMaxHeight()  - logo_fr.image.GetHeight())  / 2);
logo_fr.sprite.SetOpacity (0);
# -- Italian --
logo_it.sprite = SpriteNew();
logo_it.sprite.SetImage(logo_it.image);
logo_it.opacity_angle = 0;
logo_it.sprite.SetX((Window.GetX() + Window.GetMaxWidth()  - logo_it.image.GetWidth())  / 2.5);
logo_it.sprite.SetY((Window.GetY() + Window.GetMaxHeight()  - logo_it.image.GetHeight())  / 2);
logo_it.sprite.SetOpacity (0);
# -- German --
logo_de.sprite = SpriteNew();
logo_de.sprite.SetImage(logo_de.image);
logo_de.opacity_angle = 0;
logo_de.sprite.SetX((Window.GetX() + Window.GetMaxWidth()  - logo_de.image.GetWidth())  / 2.5);
logo_de.sprite.SetY((Window.GetY() + Window.GetMaxHeight()  - logo_de.image.GetHeight())  / 2);
logo_de.sprite.SetOpacity (0);

background.image = background.original_image.Scale(Window.GetMaxWidth() , Window.GetMaxHeight());
background.sprite = SpriteNew();
background.sprite.SetImage(background.image);
background.sprite.SetPosition(Window.GetX(), Window.GetY(), -10);

geeko.image = geeko.original_image.Scale(Window.GetMaxWidth() , Window.GetMaxHeight());
geeko.sprite = SpriteNew();
geeko.sprite.SetImage(geeko.image);
geeko.sprite.SetPosition(Window.GetX(), Window.GetY(), 0);
geeko.sprite.SetOpacity (0);

sprite_prompt = SpriteNew();

fun refresh_callback ()
  {
    if (status == "normal")
      {
	anim.index += 1;
	anim.index %= anim.imagecount;
	anim.sprite.SetImage(RotatedImage (anim.index));
      }
    else
      {
        anim.sprite.SetOpacity(0);
      }

  }
 
if (Plymouth.GetMode() != "suspend" && Plymouth.GetMode() != "resume") {
  Plymouth.SetRefreshFunction (refresh_callback);
}

#----------------------------------------- Dialog --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    local.prompt_sprite;
    
    box.image = ImageNew("box.png");
    lock.image = ImageNew("lock.png");
    entry.image = ImageNew("entry.png");
    
    box.sprite = SpriteNew();
    box.sprite.SetImage(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth()/2;
    box.y = Window.GetY() + Window.GetHeight() - box.image.GetHeight() - 20 ;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = SpriteNew();
    lock.sprite.SetImage(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight() - lock.image.GetHeight() - 20 ;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = SpriteNew();
    entry.sprite.SetImage(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight() - entry.image.GetHeight() - 20;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);

    prompt_sprite = SpriteNew();
    prompt_sprite.SetPosition(box.x, box.y - 20, box.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = ImageNew("bullet.png");
    global.dialog.prompt_sprite = prompt_sprite;
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity(opacity);
    dialog.lock.sprite.SetOpacity(opacity);
    dialog.entry.sprite.SetOpacity(opacity);
    dialog.prompt_sprite.SetOpacity(opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog) 
	dialog_setup();
    else 
	dialog_opacity(1);
    
    anim.sprite.SetOpacity(0);
	
#   dialog.prompt_sprite.SetImage(Image.Text(prompt, 0.71764706, 0.90588235 , 0.58431373));
   dialog.prompt_sprite.SetImage(Image.Text(prompt, 1, 1, 1));
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      { 
	
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = SpriteNew();
            dialog.bullet[index].sprite.SetImage(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

fun display_message_callback (prompt)
  {
  
#prompt = Image.Text(prompt, 0.71764706, 0.90588235, 0.58431373);
# Change the text to white for better readability
prompt = Image.Text(prompt, 1, 1, 1);
sprite_prompt.SetImage(prompt);
#sprite_prompt.SetPosition(Window.GetX() + (Window.GetWidth() - prompt.GetWidth()) / 2, Window.GetY() + Window.GetHeight() * 0.93, 2);
sprite_prompt.SetPosition(Window.GetX() + (Window.GetWidth() - prompt.GetWidth()) / 2, Window.GetY() + 20, 2);
  }

/* instantiate dialog at startup, to ensure all icons are loaded in memory before initrd is unmounted, in case /usr isn't mounted yet */
dialog_setup(); dialog_opacity(0);
Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);
Plymouth.SetMessageFunction(display_message_callback);

#----------------------------------------- Progress Bar --------------------------------

if (Plymouth.GetMode() == "suspend" || Plymouth.GetMode() == "resume") {
  progress_box.original_image = ImageNew("progress_box_background.png");
  progress_box.image = progress_box.original_image.Scale(Window.GetMaxWidth() * 0.44, progress_box.original_image.GetHeight());
  progress_box.edge = ImageNew("progress_box_edge.png");
  progress_box.left_edge_sprite = SpriteNew();
  progress_box.right_edge_sprite = SpriteNew();
  progress_box.sprite = SpriteNew();
  progress_box.sprite.SetImage(progress_box.image);
  progress_box.left_edge_sprite.SetImage(progress_box.edge);
  progress_box.right_edge_sprite.SetImage(progress_box.edge);

  progress_box.x = Window.GetX() + Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
  progress_box.y = Window.GetY() + Window.GetHeight() * 0.86 - progress_box.image.GetHeight() / 2;

  progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);
  progress_box.left_edge_sprite.SetPosition(progress_box.x-1, progress_box.y, 0);
  progress_box.right_edge_sprite.SetPosition(progress_box.x + progress_box.image.GetWidth() , progress_box.y, 0);

  progress_bar.original_image = ImageNew("progress_bar.png");
  progress_bar.sprite = SpriteNew();

  progress_bar.sprite.SetPosition(progress_box.x + 1, progress_box.y + 2, 1);
}

fun progress_callback (duration, progress)
  {
if (Plymouth.GetMode() == "suspend" || Plymouth.GetMode() == "resume") {
    new_width = (progress_box.image.GetWidth() - 2) * progress;
    if (progress_bar.image.GetWidth() != Math.Int (new_width))
      {
        progress_bar.image = progress_bar.original_image.Scale(new_width, progress_bar.original_image.GetHeight());
        progress_bar.sprite.SetImage(progress_bar.image);
      }
  }
else {
       if (progress < 0.9) {
          geeko.sprite.SetOpacity (progress * 1.2);
       if (progress < 0.20) {
           logo_en.sprite.SetOpacity (1);
       } else {
       if (progress < 0.40) {
           logo_en.sprite.SetOpacity (0);
           logo_de.sprite.SetOpacity (1);
       } else {
       if (progress < 0.60) {
           logo_de.sprite.SetOpacity (0);
           logo_fr.sprite.SetOpacity (1);
       } else {
       if (progress < 0.80) {
           logo_fr.sprite.SetOpacity (0);
           logo_it.sprite.SetOpacity (1);
       } else {
       if (progress < 0.90) {
           logo_it.sprite.SetOpacity (0.5);
           anim.sprite.SetOpacity (0.5);
       }}}}}}
       else {
          geeko.sprite.SetOpacity (1);
          logo_it.sprite.SetOpacity (0);
          logo_en.sprite.SetOpacity (0);
          logo_fr.sprite.SetOpacity (0);
          logo_de.sprite.SetOpacity (0);
          anim.sprite.SetOpacity (0);
       }
   }
 }

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
 anim.sprite.SetOpacity (0);
}

Plymouth.SetQuitFunction(quit_callback);

